const cookieKey = "plan=";

License.plan = getPlanFromCookie() || "enterprise";

function getPlanFromCookie() {
  const name = cookieKey;
  const decodedCookie = decodeURIComponent(document.cookie);
  const cookieArray = decodedCookie.split(";");

  for (let i = 0; i < cookieArray.length; i++) {
    let cookie = cookieArray[i];
    while (cookie.charAt(0) === " ") {
      cookie = cookie.substring(1);
    }

    if (cookie.indexOf(name) === 0) {
      return cookie.substring(name.length, cookie.length);
    }
  }

  return "";
}

function savePlanToCookie(plan, daysToExpire = 30) {
  const date = new Date();
  date.setTime(date.getTime() + daysToExpire * 24 * 60 * 60 * 1000);
  const expires = "expires=" + date.toUTCString();
  document.cookie = cookieKey + plan + ";" + expires + ";path=/";
}

function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

const url = `https://s3.amazonaws.com/cdn.fastify.com/scripts/production/v3/${
  License.permanent_domain
}.json?version=${getRandomInt(10000, 99999)}`;

if (License.plan) {
  // load widget script

  fetch(url)
    .then((response) => response.json())
    .then((data) => {
      let plan = data?.plan;

      if (plan.toLowerCase() === "trial") {
        plan = "enterprise";
      }

      savePlanToCookie(plan);
      License.plan = plan;
      checkWidgetAccess();
    })
    .catch((error) => {
      revokeWidgetAccess();
      console.error("Error calling API:", error);
    });
} else {
  fetch(url)
    .then((response) => response.json())
    .then((data) => {
      let plan = data?.plan;

      if (plan.toLowerCase() === "trial") {
        plan = "enterprise";
      }

      // load widget script
      savePlanToCookie(plan);
      License.plan = plan;
      checkWidgetAccess();
    })
    .catch((error) => {
      revokeWidgetAccess();
      console.error("Error calling API:", error);
    });
}

function checkWidgetAccess() {
  if (License.plan) {
    License.activated = true;
    console.log("Widget access granted");
    // Load widget script
  } else {
    console.log("Widget access denied");
  }
}

function revokeWidgetAccess() {
  delete globalThis.License;
  delete globalThis.Fastify;
  console.log("Widget access revoked");
}
